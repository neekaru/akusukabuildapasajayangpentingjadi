name: Build wxFormBuilder
on:
  workflow_dispatch:
    inputs:
      build_timestamp:
        description: 'Build Timestamp (UTC)'
        required: true
        default: '2025-01-24 14:12:16'
      build_user:
        description: 'Builder Username'
        required: true
        default: 'neekaru'

env:
  BUILD_TIMESTAMP: ${{ github.event.inputs.build_timestamp }}
  BUILD_USER: ${{ github.event.inputs.build_user }}

jobs:
  package-sources:
    name: Package Sources
    runs-on: windows-latest
    steps:
      - uses: actions/github-script@v7.0.1
        id: variables
        with:
          result-encoding: string
          script: |
            if (context.ref.startsWith('refs/tags/v')) {
              return context.ref.split('/').pop().slice(1);
            } else {
              return context.ref.split('/').pop();
            }

      - name: Checkout target repository
        uses: actions/checkout@v3
        with:
          repository: wxFormBuilder/wxFormBuilder
          path: target-repo
          submodules: recursive

      - name: Fetch tags
        working-directory: target-repo
        run: git fetch --prune --prune-tags --force --depth=1 --no-recurse-submodules

      - uses: msys2/setup-msys2@v2.24.1
        with:
          msystem: mingw64
          release: false
          update: false
          install: mingw-w64-x86_64-libzip git

      - name: Create source archive
        shell: msys2 {0}
        working-directory: target-repo
        run: |
          git config --global core.autocrlf true
          echo "Build by ${{ env.BUILD_USER }} at ${{ env.BUILD_TIMESTAMP }}" > build_info.txt
          git archive "--output=wxFormBuilder-${{ steps.variables.outputs.result }}-source-full.zip" "--prefix=wxFormBuilder-${{ steps.variables.outputs.result }}/" HEAD
          git submodule foreach --recursive "git archive --output=module.zip \"--prefix=wxFormBuilder-${{ steps.variables.outputs.result }}/\$displaypath/\" HEAD && zipmerge \"$PWD/wxFormBuilder-${{ steps.variables.outputs.result }}-source-full.zip\" module.zip && rm -f module.zip"

      - uses: actions/upload-artifact@v4.4.3
        with:
          name: wxFormBuilder Source
          path: target-repo/wxFormBuilder-*-source-full.zip

  build-windows:
    name: Build Windows (${{ matrix.pkg }})
    runs-on: windows-latest
    needs: package-sources
    strategy:
      fail-fast: false
      matrix:
        include:
          - { sys: mingw32, arch: i686, pkg: i686 }
          - { sys: ucrt64, arch: x86_64, pkg: ucrt-x86_64 }
    steps:
      - name: Checkout target repository
        uses: actions/checkout@v3
        with:
          repository: wxFormBuilder/wxFormBuilder
          path: target-repo
          fetch-tags: true
          submodules: recursive

      - uses: msys2/setup-msys2@v2.24.1
        with:
          msystem: ${{ matrix.sys }}
          release: false
          update: false
          install: >-
            mingw-w64-${{ matrix.pkg }}-toolchain
            mingw-w64-${{ matrix.pkg }}-cmake
            mingw-w64-${{ matrix.pkg }}-make
            mingw-w64-${{ matrix.pkg }}-wxWidgets3.2
            mingw-w64-${{ matrix.pkg }}-boost
            base-devel
            git

      - name: Configure msys2 environment
        shell: msys2 {0}
        working-directory: target-repo
        run: |
          git config --global core.autocrlf true
          echo "project_version=`sed -n -E -e "/^project\(wxFormBuilder[[:space:]]+VERSION[[:space:]]+(.*)[[:space:]]+LANGUAGES.*$/{s//-\1/p;q}" CMakeLists.txt `" >> $GITHUB_ENV
          echo "Build by ${{ env.BUILD_USER }} at ${{ env.BUILD_TIMESTAMP }}" > build_info.txt

      - name: Create build system
        shell: msys2 {0}
        working-directory: target-repo
        run: |
          cmake -S . -B _build -G "MSYS Makefiles" --install-prefix "$PWD/_install" -DCMAKE_BUILD_TYPE=Release

      - name: Build
        shell: msys2 {0}
        working-directory: target-repo
        run: |
          cmake --build _build --config Release -j `nproc`

      - name: Test stage
        shell: msys2 {0}
        working-directory: target-repo
        run: |
          _build\\stage\\wxFormBuilder.exe -v
          _build\\stage\\wxFormBuilder.exe -g test\\wxfbTest.fbp

      - name: Install
        shell: msys2 {0}
        working-directory: target-repo
        run: |
          cmake --install _build --config Release --strip
          cp build_info.txt _install/

      - name: Test install
        shell: cmd
        working-directory: target-repo
        run: |
          _install\\wxFormBuilder.exe -v
          _install\\wxFormBuilder.exe -g test\\wxfbTest.fbp

      - name: Create archive
        shell: cmd
        working-directory: target-repo
        run: |
          cd _install
          7z a -tzip -bb1 "..\\wxFormBuilder${{ env.project_version }}-${{ matrix.pkg }}.zip" .

      - name: Create installer
        shell: cmd
        working-directory: target-repo
        run: |
          ISCC.exe /DArch=${{ matrix.arch }} /O. data\\packaging\\windows\\wxFormBuilder.iss

      - uses: actions/upload-artifact@v4.4.3
        with:
          name: Windows Archive ${{ matrix.pkg }}
          path: target-repo/wxFormBuilder-*.zip

      - uses: actions/upload-artifact@v4.4.3
        with:
          name: Windows Installer ${{ matrix.pkg }}
          path: target-repo/wxFormBuilder-*.exe

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            target-repo/wxFormBuilder-*.zip
            target-repo/wxFormBuilder-*.exe
          draft: true
          name: "wxFormBuilder Release (Built by ${{ env.BUILD_USER }} at ${{ env.BUILD_TIMESTAMP }})"
          body: |
            Build Information:
            - Built by: ${{ env.BUILD_USER }}
            - Build date: ${{ env.BUILD_TIMESTAMP }}
            - Build type: Release
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.MALAS_TOKEN }}