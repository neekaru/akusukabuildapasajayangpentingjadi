name: Build and Release net-snmp

on:
  workflow_dispatch:
    inputs:
      buildType:
        description: 'Build Configuration'
        required: true
        default: 'Release'
        type: choice
        options:
          - MSVCDYNAMIC64
          - MSVCSTATIC64
          - INSTALLER

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout net-snmp repository
      uses: actions/checkout@v4
      with:
        repository: net-snmp/net-snmp
        path: net-snmp

    - name: Install winget
      uses: Cyberboss/install-winget@v1
    
    - name: Winget test
      run: winget list --accept-source-agreements

    - name: Install OpenSSL
      shell: powershell
      run: |
        # Download and extract Win64 OpenSSL
        $opensslVersion = "3_4_1"
        $opensslDir = "C:\OpenSSL-Win64"
        
        # Create directory if it doesn't exist
        New-Item -ItemType Directory -Force -Path $opensslDir
        
        # Download OpenSSL
        $url = "https://slproweb.com/download/Win64OpenSSL-$opensslVersion.exe"
        $installer = "$env:TEMP\Win64OpenSSL.exe"
        Invoke-WebRequest -Uri $url -OutFile $installer
        
        # Install OpenSSL
        Start-Process -FilePath $installer -ArgumentList "/SILENT /SP- /DIR=`"$opensslDir`"" -Wait
        
        # Verify installation
        if (!(Test-Path "$opensslDir\include\openssl\ossl_typ.h")) {
            Write-Error "OpenSSL header files not found!"
            exit 1
        }
        
        Write-Output "OpenSSL installed successfully"
        Get-ChildItem "$opensslDir\include\openssl"

    - name: Setup MSVC and environment variables
      shell: cmd
      run: |
        set VCVARSPATH=C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build
        if not exist "%VCVARSPATH%" (
          echo "Error: MSVC vcvars64.bat not found. Visual Studio 2022 Enterprise is required."
          exit /b 1
        )
        
        rem Set up Visual Studio environment
        call "%VCVARSPATH%\vcvars64.bat"
        
        rem Set environment variables for the current session
        set "PATH=C:\Perl64\bin;%PATH%"
        set "PATH=%PATH%;C:\cygwin64\bin"
        set "OPENSSLDIR=C:\OpenSSL-Win64"
        set "INCLUDE=%INCLUDE%;C:\OpenSSL-Win64\include"
        set "LIB=%LIB%;C:\OpenSSL-Win64\lib;C:\OpenSSL-Win64\lib\"
        
        rem Verify OpenSSL setup
        dir "C:\OpenSSL-Win64\include\openssl\ossl_typ.h"
        if %errorlevel% neq 0 (
          echo "Error: OpenSSL headers not found!"
          exit /b 1
        )

    - name: Modify build.bat
      shell: powershell
      run: |
        $buildBatPath = "net-snmp/ci/build.bat"
        if (Test-Path -Path $buildBatPath) {
          (Get-Content -Path $buildBatPath) -replace 'set p=C:\\Program Files \(x86\)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build', 'set p=C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Auxiliary\\Build' |
          Set-Content -Path $buildBatPath
        } else {
          Write-Output "build.bat not found."
          exit 1
        }

    - name: Build net-snmp
      shell: cmd
      run: |
        cd net-snmp
        set BUILD=${{ inputs.buildType }}
        call ci/build.bat
        if %errorlevel% neq 0 exit /b %errorlevel%

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: net-snmp-${{ inputs.buildType }}
        path: |
          c:/usr/**/*
          !**/*.pdb
          !**/*.obj

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: net-snmp-${{ inputs.buildType }}
        path: build

    - name: Create zip file
      run: |
        cd build
        zip -r ../net-snmp-${{ inputs.buildType }}.zip ./

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MALAS_TOKEN }}
      with:
        tag_name: release-${{ github.sha }}
        release_name: Net-SNMP Build For ${{ inputs.buildType }}-${{ github.sha }}
        body: |
          Net-SNMP release build for commit ${{ github.sha }}
          Build Configuration: ${{ inputs.buildType }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MALAS_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: net-snmp-${{ inputs.buildType }}.zip
        asset_name: net-snmp-${{ inputs.buildType }}.zip
        asset_content_type: application/zip